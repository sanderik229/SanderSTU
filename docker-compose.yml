services:
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: sanderstu
      POSTGRES_USER: sanderstu
      POSTGRES_PASSWORD: sanderstu123
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sanderstu"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             (if [ -f fixtures/initial_data.json ]; then
                python manage.py loaddata fixtures/initial_data.json || python manage.py seed_data;
              else
                python manage.py seed_data;
              fi) &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    environment:
      DEBUG: "True"
      USE_POSTGRES: "true"
      POSTGRES_DB: sanderstu
      POSTGRES_USER: sanderstu
      POSTGRES_PASSWORD: sanderstu123
      POSTGRES_HOST: db
      POSTGRES_PORT: "5432"
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres_data:
  static_volume:
  media_volume:
